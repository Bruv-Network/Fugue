buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
        maven { url = 'https://maven.outlands.top/releases' }
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '6.10.+', changing: true
        classpath "org.spongepowered:mixingradle:0.7.+"
        classpath "net.kyori:blossom:2.1.0"
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'net.kyori.blossom'

version = "${minecraft_version}-${mod_version}"
group = mod_base_package
archivesBaseName = "+" + mod_name



java.toolchain.languageVersion = JavaLanguageVersion.of(21)

minecraft {

    mappings channel: mappings_channel, version: mappings_version

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    legacy {
        fixClasspath = true
        extractMappings = true
        attachMappings = true
    }
    
    runs {
        client {
            workingDirectory project.file('run/client')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.debug', 'true'
        }

        server {
            workingDirectory project.file('run/server')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets {
    main {
        resources {
            srcDir 'src/generated/resources'
        }
        blossom {
            resources {
                property("mod_id", mod_id)
                property("mod_name", mod_name)
                property("mod_description", mod_description)
                property("mod_version", mod_version)
                property("mod_authors", mod_authors)
            }
            javaSources {
                property("MODNAME", mod_name)
                property("MODID", mod_id)
                property("VERSION", version)
            }
        }
    }
}
mixin {
    add sourceSets.main, mod_id + ".mixins.refmap.json"
}
repositories {
    maven {
        name 'Cleanroom Maven'
        url 'https://maven.cleanroommc.com/'
    }
    maven {
        url "https://repo.cleanroommc.com/snapshots"
    }
    maven {
        url "https://maven.outlands.top/releases/"
    }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name "chickenbones"
        url "https://chickenbones.net/maven/"
    }
    maven {
        name "tterrag" //EnderCore
        url "https://maven.tterrag.com/"
    }
    mavenCentral()
}

dependencies {
    minecraft "com.cleanroommc:cleanroom:15.24.0.3030"
    implementation "top.outlands:foundation:0.8.2"
    implementation 'org.javassist:javassist:3.30.2-GA'

    //Charset Lib
    compileOnly(fg.deobf("curse.maven:charset-284523:3656492"))
    runtimeOnly(fg.deobf("curse.maven:charset-284523:3656492"))
    
    //Xaero's Minimap
    compileOnly(fg.deobf("curse.maven:xaero-263420:4911777"))
    compileOnly(fg.deobf("curse.maven:xaero-map-317780:4911823"))
    runtimeOnly(fg.deobf("curse.maven:xaero-263420:4911777"))
    compileOnly(fg.deobf("curse.maven:xaero-plus-866084:4912433"))
    //runtimeOnly(fg.deobf("curse.maven:xaero-plus-866084:4912433")) 
    
    //CodeChickenASM
    compileOnly("codechicken:ChickenASM:3.2.0.17")
    //runtimeOnly("codechicken:ChickenASM:3.2.0.17")
    
    //CodeChickenLib
    compileOnly(fg.deobf("codechicken:CodeChickenLib:1.12-3.1.5.330:universal"))
    //runtimeOnly(fg.deobf("codechicken:CodeChickenLib:1.12-3.1.5.330:universal"))
    
    //ForgeMultipart
    compileOnly(fg.deobf("codechicken:ForgeMultipart:1.12-2.3.0.51:universal"))
    //runtimeOnly(fg.deobf("codechicken:ForgeMultipart:1.12-2.3.0.51:universal")) //Don't uncomment it or you will crash, a Scala 2.12 is somehow resolved in the path
    
    //Project Red Core
    compileOnly(fg.deobf("curse.maven:pr-core-228702:2745545"))
    //runtimeOnly(fg.deobf("curse.maven:pr-core-228702:2745545"))
    
    //Solar Flux Reborne
    compileOnly(fg.deobf("curse.maven:solarflux-246974:3050838"))
    //runtimeOnly(fg.deobf("curse.maven:pr-core-228702:2745545"))
    
    //Custom Main Menu
    compileOnly(fg.deobf("curse.maven:cmm-226406:2857869"))
    //runtimeOnly(fg.deobf("curse.maven:cmm-226406:2857869"))

    //HammerLib
    compileOnly(fg.deobf("curse.maven:hammer-247401:4878669"))
    //runtimeOnly(fg.deobf("curse.maven:hammer-247401:4878669"))

    //EnderCore
    compileOnly(fg.deobf("com.enderio.core:EnderCore:1.12.2-0.5.78:core"))
    //runtimeOnly(fg.deobf("com.enderio.core:EnderCore:1.12.2-0.5.78:core"))
    
    //Lag Goggles
    compileOnly(fg.deobf("curse.maven:lag-goggles-283525:4493884"))
    //runtimeOnly(fg.deobf("curse.maven:lag-goggles-283525:4493884"))

    //Shoulder Surfing Reloaded
    compileOnly(fg.deobf("curse.maven:shoulder-surfing-243190:5009912"))
    //runtimeOnly(fg.deobf("curse.maven:shoulder-surfing-243190:5009912"))
    
    //Logistics Pipes
    compileOnly(fg.deobf("curse.maven:logistics-pipes-232838:4849512"))
    //runtimeOnly(fg.deobf("curse.maven:logistics-pipes-232838:4849512"))

    //Logistics Pipes
    compileOnly(fg.deobf("curse.maven:gtceu-557242:5050979"))
    //runtimeOnly(fg.deobf("curse.maven:gtceu-557242:5050979"))
    
    // Mixin and it's common libraries
    annotationProcessor 'org.ow2.asm:asm:9.6'
    annotationProcessor 'com.google.guava:guava:33.0.0-jre'
    annotationProcessor 'com.google.code.gson:gson:2.10.1'

    annotationProcessor ('com.cleanroommc:sponge-mixin:0.17.2+mixin.0.8.5')
    implementation 'com.cleanroommc:sponge-mixin:0.17.2+mixin.0.8.5'
    annotationProcessor ("io.github.llamalad7:mixinextras-common:0.3.5")
    implementation "io.github.llamalad7:mixinextras-common:0.3.5"
}


jar {
    manifest {
        attributes([
                'Specification-Title': mod_id,
                'Specification-Vendor': mod_authors,
                'Specification-Version': '1', // We are version 1 of ourselves
                'FMLCorePluginContainsFMLMod': true,
                //'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'FMLCorePlugin': 'com.cleanroommc.FugueLoadingPlugin',
                'ForceLoadAsMod': true,
                'FMLAT': 'accesstransformer.cfg',
                'Implementation-Title': project.name,
                'Implementation-Version': mod_version,
                'Implementation-Vendor': mod_authors,
                'Implementation-Timestamp': new Date().format('yyyy-MM-dd\'T\'HH:mm:ssZ')
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
